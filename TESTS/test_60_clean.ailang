// test.ailang - Consolidated Test Suite for AILANG
// All tests in one place for easier management
PrintMessage("==================================================")
PrintMessage("        AILANG COMPREHENSIVE TEST SUITE")
PrintMessage("==================================================")
PrintMessage("")
// ==========================================
// TEST 1: BASIC NUMBER OPERATIONS
// ==========================================
PrintMessage("TEST 1: Basic Number Operations")
PrintMessage("--------------------------------")
// Test direct number storage and retrieval
val = 42
PrintMessage("Stored 42 in variable:")
PrintNumber(val)
// Test arithmetic
result = Add(10, 20)
PrintMessage("10 + 20 =")
PrintNumber(result)
result = Subtract(50, 8)
PrintMessage("50 - 8 =")
PrintNumber(result)
result = Multiply(6, 7)
PrintMessage("6 * 7 =")
PrintNumber(result)
PrintMessage("")
// ==========================================
// TEST 2: HASH TABLE OPERATIONS
// ==========================================
PrintMessage("TEST 2: Hash Table Operations")
PrintMessage("------------------------------")
// Create hash table
store = HashCreate(4)
PrintMessage("Created hash table")
// Store and retrieve single value
HashSet(store, "key1", 42)
result = HashGet(store, "key1")
PrintMessage("Stored 42 with key1, got:")
PrintNumber(result)
// Store multiple values
HashSet(store, "a", 100)
HashSet(store, "b", 200)
HashSet(store, "c", 300)
PrintMessage("Multiple values test:")
result = HashGet(store, "a")
PrintMessage("  a =")
PrintNumber(result)
result = HashGet(store, "b")
PrintMessage("  b =")
PrintNumber(result)
result = HashGet(store, "c")
PrintMessage("  c =")
PrintNumber(result)
// Test update
HashSet(store, "a", 999)
result = HashGet(store, "a")
PrintMessage("Updated a to 999:")
PrintNumber(result)
// Test non-existent key
result = HashGet(store, "notfound")
