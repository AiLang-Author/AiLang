buffer = Allocate(1024)

// 13 stores
StoreValue(buffer, 42)
StoreValue(Add(buffer, 1), 49)
StoreValue(Add(buffer, 2), 13)
StoreValue(Add(buffer, 3), 10)
StoreValue(Add(buffer, 4), 36)
StoreValue(Add(buffer, 5), 51)
StoreValue(Add(buffer, 6), 13)
StoreValue(Add(buffer, 7), 10)
StoreValue(Add(buffer, 8), 71)
StoreValue(Add(buffer, 9), 69)
StoreValue(Add(buffer, 10), 84)
StoreValue(Add(buffer, 11), 13)
StoreValue(Add(buffer, 12), 10)

// Match RESP parser's exact PrintMessages
PrintMessage("RESP Parser - Flat Version")
PrintMessage("")
first = Dereference(buffer)
PrintMessage("First byte (should be 42):")
PrintMessage(first)
count_byte = Dereference(Add(buffer, 1))
count = Subtract(count_byte, 48)
PrintMessage("Array count (should be 1):")
PrintMessage(count)
bulk = Dereference(Add(buffer, 4))
PrintMessage("Bulk marker (should be 36):")
PrintMessage(bulk)
len_byte = Dereference(Add(buffer, 5))
length = Subtract(len_byte, 48)
PrintMessage("Bulk length (should be 3):")
PrintMessage(length)
g = Dereference(Add(buffer, 8))
e = Dereference(Add(buffer, 9))
t = Dereference(Add(buffer, 10))
PrintMessage("Command bytes (GET = 71,69,84):")
PrintMessage(g)
PrintMessage(e)
PrintMessage(t)

// Now the validation part
is_get_cmd = 0
is_g = EqualTo(g, 71)
IfCondition is_g ThenBlock { is_get_cmd = Add(is_get_cmd, 1) }
is_e = EqualTo(e, 69)
IfCondition is_e ThenBlock { is_get_cmd = Add(is_get_cmd, 1) }
is_t = EqualTo(t, 84)
IfCondition is_t ThenBlock { is_get_cmd = Add(is_get_cmd, 1) }
is_get = EqualTo(is_get_cmd, 3)
IfCondition is_get ThenBlock { PrintMessage("Successfully parsed GET command!") }

PrintMessage("")
PrintMessage("RESP parsing complete!")
