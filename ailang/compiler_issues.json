{
  "summary": {
    "variable_chaos": 96,
    "traversal_mess": 449,
    "memory_problems": 168,
    "phase_violations": 22,
    "coupling": 3,
    "forward_refs": 20,
    "stack_risks": 37
  },
  "issues": [
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 891,
      "issue": "Local variable assignment",
      "code": "self.variables[decl.target] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 890,
      "issue": "Local stack manipulation",
      "code": "self.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 864,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 865,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 221,
      "issue": "Function registration",
      "code": "register_function"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 879,
      "issue": "Function registration",
      "code": "register_function"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/scope_manager.py",
      "line": 47,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/scope_manager.py",
      "line": 45,
      "issue": "Variable existence check",
      "code": "if name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/scope_manager.py",
      "line": 46,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 74,
      "issue": "Variable existence check",
      "code": "if resolved_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 33,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 156,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 205,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 865,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 46,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 62,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables['system_acb_table'] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 68,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables['system_current_actor'] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 170,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[param_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 190,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[node.target] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 220,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 232,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[pool_var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 389,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[resolved_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 423,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 469,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 522,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[pool_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 655,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 886,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[resolved_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 41,
      "issue": "Variable existence check",
      "code": "if var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 168,
      "issue": "Variable existence check",
      "code": "if param_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 217,
      "issue": "Variable existence check",
      "code": "if var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 230,
      "issue": "Variable existence check",
      "code": "if pool_var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 369,
      "issue": "Variable existence check",
      "code": "if resolved_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 421,
      "issue": "Variable existence check",
      "code": "if var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 464,
      "issue": "Variable existence check",
      "code": "if var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 520,
      "issue": "Variable existence check",
      "code": "if pool_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 653,
      "issue": "Variable existence check",
      "code": "if var_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 884,
      "issue": "Variable existence check",
      "code": "if resolved_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 60,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 66,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 169,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 189,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 219,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 231,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 387,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 422,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 521,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 654,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 887,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 260,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 325,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 680,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 729,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 883,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 56,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 146,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 158,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 176,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 183,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 194,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 198,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 202,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 206,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 209,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 225,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 236,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 241,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 244,
      "issue": "Stack calculation",
      "code": "calculate_stack_size"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 246,
      "issue": "Local scanning",
      "code": "scan_for_locals"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 252,
      "issue": "Local scanning",
      "code": "scan_for_locals"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 269,
      "issue": "Local scanning",
      "code": "scan_for_locals"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 29,
      "issue": "Pool discovery",
      "code": "discover_pool_variables"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 53,
      "issue": "Pool discovery",
      "code": "discover_pool_variables"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 77,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[pool_base_var] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 83,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[pool_next_var] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 90,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[pool_size_var] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 78,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 84,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 91,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 41,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[queue_var] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 94,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[queue_var] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 37,
      "issue": "Variable existence check",
      "code": "if queue_var not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 90,
      "issue": "Variable existence check",
      "code": "if queue_var not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 39,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 92,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 201,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[resolved_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 199,
      "issue": "Variable existence check",
      "code": "if resolved_name not in self.compiler.variables:"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 202,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 198,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 221,
      "issue": "Acronym resolution",
      "code": "resolve_acronym_identifier"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 99,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[var_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 151,
      "issue": "Direct variable assignment",
      "code": "self.compiler.variables[param_name] ="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 149,
      "issue": "Stack size manipulation",
      "code": "self.compiler.stack_size +="
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 127,
      "issue": "Local scanning",
      "code": "scan_for_locals"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 29,
      "issue": "Function registration",
      "code": "register_function"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 73,
      "issue": "Function registration",
      "code": "register_function"
    },
    {
      "category": "VARIABLE_CHAOS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 355,
      "issue": "Function registration",
      "code": "register_function"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 275,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 588,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 639,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 669,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 682,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 303,
      "issue": "hasattr checking",
      "code": "if hasattr(node, \"function\"):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 304,
      "issue": "Node type field check",
      "code": "if node.function == \"RunTask\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 312,
      "issue": "Node type field check",
      "code": "if node.function == \"ReturnValue\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 340,
      "issue": "Node type field check",
      "code": "if node.function == \"SystemCall\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 476,
      "issue": "Node type field check",
      "code": "if node.function == 'StringConcatPooled':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 253,
      "issue": "compile_X pattern",
      "code": "def compile_node(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 330,
      "issue": "compile_X pattern",
      "code": "def compile_comparison(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 335,
      "issue": "compile_X pattern",
      "code": "def compile_function_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 562,
      "issue": "compile_X pattern",
      "code": "def compile_subroutine(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 606,
      "issue": "compile_X pattern",
      "code": "def compile_run_task(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 634,
      "issue": "compile_X pattern",
      "code": "def compile_loop_main(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 644,
      "issue": "compile_X pattern",
      "code": "def compile_loop_start(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 654,
      "issue": "compile_X pattern",
      "code": "def compile_loop_shadow(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 675,
      "issue": "compile_X pattern",
      "code": "def compile_loop_continue(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 688,
      "issue": "compile_X pattern",
      "code": "def compile_loop_yield(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 701,
      "issue": "compile_X pattern",
      "code": "def compile_loop_send(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 737,
      "issue": "compile_X pattern",
      "code": "def compile_loop_receive(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 768,
      "issue": "compile_X pattern",
      "code": "def compile_loop_reply(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 233,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 276,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 367,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 376,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 589,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 640,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 670,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 683,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 896,
      "issue": "Recursive compile",
      "code": "self.compile_node("
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ast_visitor.py",
      "line": 25,
      "issue": "Dynamic attribute access",
      "code": "getattr(node, attr"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/ast_visitor.py",
      "line": 26,
      "issue": "isinstance check",
      "code": "isinstance(value, list)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 32,
      "issue": "compile_X pattern",
      "code": "def compile_pool_resize(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 71,
      "issue": "compile_X pattern",
      "code": "def compile_pool_move(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 133,
      "issue": "compile_X pattern",
      "code": "def compile_pool_compact(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 164,
      "issue": "compile_X pattern",
      "code": "def compile_pool_allocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 171,
      "issue": "compile_X pattern",
      "code": "def compile_pool_free(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 187,
      "issue": "compile_X pattern",
      "code": "def compile_pool_get_size(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/scope_manager.py",
      "line": 43,
      "issue": "Type name comparison",
      "code": "type(decl).__name__ =="
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 180,
      "issue": "Node type field check",
      "code": "if node.function == 'NotEqual':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 211,
      "issue": "Node type field check",
      "code": "if node.function == 'LessThan':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 213,
      "issue": "Node type field check",
      "code": "if node.function == 'LessEqual':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 215,
      "issue": "Node type field check",
      "code": "if node.function == 'GreaterThan':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 217,
      "issue": "Node type field check",
      "code": "if node.function == 'GreaterEqual':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 219,
      "issue": "Node type field check",
      "code": "if node.function == 'Equal':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 221,
      "issue": "Node type field check",
      "code": "if node.function == 'EqualTo':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 20,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 189,
      "issue": "compile_X pattern",
      "code": "def compile_comparison(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 236,
      "issue": "compile_X pattern",
      "code": "def compile_and(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 267,
      "issue": "compile_X pattern",
      "code": "def compile_or(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 299,
      "issue": "compile_X pattern",
      "code": "def compile_not(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 318,
      "issue": "compile_X pattern",
      "code": "def compile_power(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 384,
      "issue": "compile_X pattern",
      "code": "def compile_equal(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 417,
      "issue": "compile_X pattern",
      "code": "def compile_bitwise_not(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 445,
      "issue": "compile_X pattern",
      "code": "def compile_not_equal(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 475,
      "issue": "compile_X pattern",
      "code": "def compile_bitwise_and(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 486,
      "issue": "compile_X pattern",
      "code": "def compile_bitwise_or(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 497,
      "issue": "compile_X pattern",
      "code": "def compile_left_shift(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 509,
      "issue": "compile_X pattern",
      "code": "def compile_right_shift(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 523,
      "issue": "compile_X pattern",
      "code": "def compile_divide(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/arithmetic_ops.py",
      "line": 554,
      "issue": "compile_X pattern",
      "code": "def compile_modulo(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 20,
      "issue": "compile_X pattern",
      "code": "def compile_array_create(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 52,
      "issue": "compile_X pattern",
      "code": "def compile_array_set(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 84,
      "issue": "compile_X pattern",
      "code": "def compile_array_get(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 110,
      "issue": "compile_X pattern",
      "code": "def compile_array_length(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 124,
      "issue": "compile_X pattern",
      "code": "def compile_array_destroy(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/assignment_handler.py",
      "line": 21,
      "issue": "compile_X pattern",
      "code": "def compile_assignment(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/atomic_ops.py",
      "line": 9,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/atomic_ops.py",
      "line": 19,
      "issue": "compile_X pattern",
      "code": "def compile_atomic_add(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 76,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 72,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 107,
      "issue": "Manual node iteration",
      "code": "for stmt in node.then_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 119,
      "issue": "Manual node iteration",
      "code": "for stmt in node.else_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 151,
      "issue": "Manual node iteration",
      "code": "for stmt in node.true_block:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 157,
      "issue": "Manual node iteration",
      "code": "for stmt in node.false_block:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 182,
      "issue": "Manual node iteration",
      "code": "for _ in node.cases:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 201,
      "issue": "Manual node iteration",
      "code": "for stmt in node.default:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 23,
      "issue": "isinstance check",
      "code": "isinstance(condition, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 27,
      "issue": "isinstance check",
      "code": "isinstance(condition, Identifier)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 31,
      "issue": "isinstance check",
      "code": "isinstance(condition, Boolean)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 38,
      "issue": "isinstance check",
      "code": "isinstance(condition, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 50,
      "issue": "compile_X pattern",
      "code": "def compile_while_loop(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 91,
      "issue": "compile_X pattern",
      "code": "def compile_if_condition(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 134,
      "issue": "compile_X pattern",
      "code": "def compile_fork(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 169,
      "issue": "compile_X pattern",
      "code": "def compile_branch(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 223,
      "issue": "compile_X pattern",
      "code": "def compile_break(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/control_flow.py",
      "line": 233,
      "issue": "compile_X pattern",
      "code": "def compile_continue(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 195,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 233,
      "issue": "Manual node iteration",
      "code": "for value in node.values:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 446,
      "issue": "Manual node iteration",
      "code": "for var in node.auto_display:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 243,
      "issue": "Node type field check",
      "code": "if node.break_type == \"Simple\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 273,
      "issue": "Node type field check",
      "code": "if node.operation == \"Start\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 285,
      "issue": "Node type field check",
      "code": "if node.operation == \"Stop\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 499,
      "issue": "Node type field check",
      "code": "if node.action == 'start':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 508,
      "issue": "Node type field check",
      "code": "if node.action == 'stop':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 511,
      "issue": "Node type field check",
      "code": "if node.action == 'report':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 545,
      "issue": "Node type field check",
      "code": "if node.action == 'enable':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 548,
      "issue": "Node type field check",
      "code": "if node.action == 'disable':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 551,
      "issue": "Node type field check",
      "code": "if node.action == 'generate':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 103,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 183,
      "issue": "compile_X pattern",
      "code": "def compile_debug_block(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 200,
      "issue": "compile_X pattern",
      "code": "def compile_debug_assert(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 220,
      "issue": "compile_X pattern",
      "code": "def compile_debug_trace(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 236,
      "issue": "compile_X pattern",
      "code": "def compile_debug_break(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 256,
      "issue": "compile_X pattern",
      "code": "def compile_debug_memory(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 268,
      "issue": "compile_X pattern",
      "code": "def compile_debug_perf(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 301,
      "issue": "compile_X pattern",
      "code": "def compile_debug_inspect(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 315,
      "issue": "compile_X pattern",
      "code": "def compile_stacktrace(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 334,
      "issue": "compile_X pattern",
      "code": "def compile_memory_dump(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 365,
      "issue": "compile_X pattern",
      "code": "def compile_watch(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 397,
      "issue": "compile_X pattern",
      "code": "def compile_locals(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 414,
      "issue": "compile_X pattern",
      "code": "def compile_registers(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 438,
      "issue": "compile_X pattern",
      "code": "def compile_interactive(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 464,
      "issue": "compile_X pattern",
      "code": "def compile_breakpoint(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 495,
      "issue": "compile_X pattern",
      "code": "def compile_profile(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 525,
      "issue": "compile_X pattern",
      "code": "def compile_leak_check(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 541,
      "issue": "compile_X pattern",
      "code": "def compile_core_dump(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 114,
      "issue": "Type name comparison",
      "code": "type(expr).__name__ =="
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 117,
      "issue": "Type name comparison",
      "code": "type(expr).__name__ =="
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 21,
      "issue": "isinstance check",
      "code": "isinstance(expr, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 32,
      "issue": "isinstance check",
      "code": "isinstance(expr, Identifier)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 105,
      "issue": "isinstance check",
      "code": "isinstance(expr, String)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 109,
      "issue": "isinstance check",
      "code": "isinstance(expr, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 111,
      "issue": "isinstance check",
      "code": "isinstance(expr, Dereference)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 229,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, String)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 234,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, Identifier)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 236,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 245,
      "issue": "isinstance check",
      "code": "isinstance(data_arg, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 248,
      "issue": "isinstance check",
      "code": "isinstance(data_arg, String)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 769,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, String)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 775,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, Identifier)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 779,
      "issue": "isinstance check",
      "code": "isinstance(path_arg, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 20,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 43,
      "issue": "compile_X pattern",
      "code": "def compile_read_binary_file(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 129,
      "issue": "compile_X pattern",
      "code": "def compile_write_binary_file(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 217,
      "issue": "compile_X pattern",
      "code": "def compile_write_text_file(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 490,
      "issue": "compile_X pattern",
      "code": "def compile_read_text_file(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 760,
      "issue": "compile_X pattern",
      "code": "def compile_file_exists(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 20,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'function'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 42,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'function_address'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 122,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'target'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 30,
      "issue": "isinstance check",
      "code": "isinstance(node, CallIndirect)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 32,
      "issue": "isinstance check",
      "code": "isinstance(node, AddressOf)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 18,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 37,
      "issue": "compile_X pattern",
      "code": "def compile_call_indirect(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/function_dispatch.py",
      "line": 116,
      "issue": "compile_X pattern",
      "code": "def compile_address_of(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 19,
      "issue": "hasattr checking",
      "code": "if hasattr(node, \"function\"):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 17,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 84,
      "issue": "compile_X pattern",
      "code": "def compile_hash_create(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 136,
      "issue": "compile_X pattern",
      "code": "def compile_hash_set(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 276,
      "issue": "compile_X pattern",
      "code": "def compile_hash_get(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 404,
      "issue": "compile_X pattern",
      "code": "def compile_hash_exists(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 419,
      "issue": "compile_X pattern",
      "code": "def compile_hash_delete(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 56,
      "issue": "isinstance check",
      "code": "isinstance(size_arg, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 208,
      "issue": "isinstance check",
      "code": "isinstance(cap_arg, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 20,
      "issue": "compile_X pattern",
      "code": "def compile_runtask(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 24,
      "issue": "hasattr checking",
      "code": "if hasattr(node, '__class__'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 40,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'function'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 910,
      "issue": "Dynamic attribute access",
      "code": "getattr(node, 'size_hint"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 807,
      "issue": "isinstance check",
      "code": "isinstance(node, InterruptControl)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 991,
      "issue": "isinstance check",
      "code": "isinstance(node, InlineAssembly)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 1008,
      "issue": "isinstance check",
      "code": "isinstance(node, SystemCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 41,
      "issue": "Node type field check",
      "code": "if node.function == 'Dereference':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 43,
      "issue": "Node type field check",
      "code": "if node.function == 'AddressOf':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 45,
      "issue": "Node type field check",
      "code": "if node.function == 'SizeOf':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 47,
      "issue": "Node type field check",
      "code": "if node.function == 'Allocate':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 51,
      "issue": "Node type field check",
      "code": "if node.function == 'MemoryCopy':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 53,
      "issue": "Node type field check",
      "code": "if node.function == 'MemorySet':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 55,
      "issue": "Node type field check",
      "code": "if node.function == 'MemoryCompare':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 57,
      "issue": "Node type field check",
      "code": "if node.function == 'StoreValue':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 59,
      "issue": "Node type field check",
      "code": "if node.function == 'SetByte':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 61,
      "issue": "Node type field check",
      "code": "if node.function == 'GetByte':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 69,
      "issue": "Node type field check",
      "code": "if node.function == 'HardwareRegister':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 345,
      "issue": "Node type field check",
      "code": "if node.function == 'Free':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 590,
      "issue": "Node type field check",
      "code": "if node.function == 'AtomicRead':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 600,
      "issue": "Node type field check",
      "code": "if node.function == 'AtomicWrite':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 618,
      "issue": "Node type field check",
      "code": "if node.function == 'AtomicAdd':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 635,
      "issue": "Node type field check",
      "code": "if node.function == 'AtomicCompareSwap':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 671,
      "issue": "Node type field check",
      "code": "if node.function == 'MMIORead':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 696,
      "issue": "Node type field check",
      "code": "if node.function == 'MMIOWrite':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 808,
      "issue": "Node type field check",
      "code": "if node.operation == \"enable\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 811,
      "issue": "Node type field check",
      "code": "if node.operation == \"disable\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 814,
      "issue": "Node type field check",
      "code": "if node.operation == \"trigger\":"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 20,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 81,
      "issue": "compile_X pattern",
      "code": "def compile_setbyte(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 121,
      "issue": "compile_X pattern",
      "code": "def compile_getbyte(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 159,
      "issue": "compile_X pattern",
      "code": "def compile_dereference(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 194,
      "issue": "compile_X pattern",
      "code": "def compile_address_of(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 226,
      "issue": "compile_X pattern",
      "code": "def compile_sizeof(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 273,
      "issue": "compile_X pattern",
      "code": "def compile_allocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 338,
      "issue": "compile_X pattern",
      "code": "def compile_deallocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 383,
      "issue": "compile_X pattern",
      "code": "def compile_memory_copy(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 437,
      "issue": "compile_X pattern",
      "code": "def compile_memory_set(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 488,
      "issue": "compile_X pattern",
      "code": "def compile_memory_compare(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 549,
      "issue": "compile_X pattern",
      "code": "def compile_storevalue(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 585,
      "issue": "compile_X pattern",
      "code": "def compile_atomic_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 666,
      "issue": "compile_X pattern",
      "code": "def compile_mmio_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 736,
      "issue": "compile_X pattern",
      "code": "def compile_hardware_register(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 804,
      "issue": "compile_X pattern",
      "code": "def compile_interrupt_control(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 831,
      "issue": "compile_X pattern",
      "code": "def compile_address_of_ast(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 898,
      "issue": "compile_X pattern",
      "code": "def compile_dereference_ast(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 941,
      "issue": "compile_X pattern",
      "code": "def compile_sizeof_ast(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 988,
      "issue": "compile_X pattern",
      "code": "def compile_inline_assembly(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 1005,
      "issue": "compile_X pattern",
      "code": "def compile_system_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 14,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 99,
      "issue": "compile_X pattern",
      "code": "def compile_floor(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 110,
      "issue": "compile_X pattern",
      "code": "def compile_ceil(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 120,
      "issue": "compile_X pattern",
      "code": "def compile_round(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 129,
      "issue": "compile_X pattern",
      "code": "def compile_round_even(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 138,
      "issue": "compile_X pattern",
      "code": "def compile_trunc(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 147,
      "issue": "compile_X pattern",
      "code": "def compile_frac(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 159,
      "issue": "compile_X pattern",
      "code": "def compile_min(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 182,
      "issue": "compile_X pattern",
      "code": "def compile_max(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 205,
      "issue": "compile_X pattern",
      "code": "def compile_clamp(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 241,
      "issue": "compile_X pattern",
      "code": "def compile_saturate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 268,
      "issue": "compile_X pattern",
      "code": "def compile_sign(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 303,
      "issue": "compile_X pattern",
      "code": "def compile_popcount(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 346,
      "issue": "compile_X pattern",
      "code": "def compile_clz(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 382,
      "issue": "compile_X pattern",
      "code": "def compile_ctz(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 413,
      "issue": "compile_X pattern",
      "code": "def compile_rotate_left(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 437,
      "issue": "compile_X pattern",
      "code": "def compile_rotate_right(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 461,
      "issue": "compile_X pattern",
      "code": "def compile_byte_swap(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 476,
      "issue": "compile_X pattern",
      "code": "def compile_bit_reverse(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 492,
      "issue": "compile_X pattern",
      "code": "def compile_align_up(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 529,
      "issue": "compile_X pattern",
      "code": "def compile_align_down(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 559,
      "issue": "compile_X pattern",
      "code": "def compile_is_power_of_two(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 600,
      "issue": "compile_X pattern",
      "code": "def compile_next_power_of_two(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 651,
      "issue": "compile_X pattern",
      "code": "def compile_floor_log2(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 685,
      "issue": "compile_X pattern",
      "code": "def compile_floor_divide(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 690,
      "issue": "compile_X pattern",
      "code": "def compile_remainder(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 695,
      "issue": "compile_X pattern",
      "code": "def compile_divmod(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 700,
      "issue": "compile_X pattern",
      "code": "def compile_fma(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 705,
      "issue": "compile_X pattern",
      "code": "def compile_hypot(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 710,
      "issue": "compile_X pattern",
      "code": "def compile_lerp(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 716,
      "issue": "compile_X pattern",
      "code": "def compile_sin(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 717,
      "issue": "compile_X pattern",
      "code": "def compile_cos(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 718,
      "issue": "compile_X pattern",
      "code": "def compile_tan(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 719,
      "issue": "compile_X pattern",
      "code": "def compile_asin(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 720,
      "issue": "compile_X pattern",
      "code": "def compile_acos(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 721,
      "issue": "compile_X pattern",
      "code": "def compile_atan(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 722,
      "issue": "compile_X pattern",
      "code": "def compile_atan2(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 723,
      "issue": "compile_X pattern",
      "code": "def compile_tanh(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 726,
      "issue": "compile_X pattern",
      "code": "def compile_deg_to_rad(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 727,
      "issue": "compile_X pattern",
      "code": "def compile_rad_to_deg(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 730,
      "issue": "compile_X pattern",
      "code": "def compile_exp(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 731,
      "issue": "compile_X pattern",
      "code": "def compile_expm1(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 732,
      "issue": "compile_X pattern",
      "code": "def compile_exp2(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 733,
      "issue": "compile_X pattern",
      "code": "def compile_log(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 734,
      "issue": "compile_X pattern",
      "code": "def compile_log1p(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 735,
      "issue": "compile_X pattern",
      "code": "def compile_log2(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 736,
      "issue": "compile_X pattern",
      "code": "def compile_log10(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 739,
      "issue": "compile_X pattern",
      "code": "def compile_next_after(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 740,
      "issue": "compile_X pattern",
      "code": "def compile_frexp(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 741,
      "issue": "compile_X pattern",
      "code": "def compile_ldexp(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/math_ops.py",
      "line": 742,
      "issue": "compile_X pattern",
      "code": "def compile_nearly_equal(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 34,
      "issue": "Manual node iteration",
      "code": "for decl in node.declarations:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 125,
      "issue": "Manual node iteration",
      "code": "for decl in node.declarations:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 157,
      "issue": "Manual node iteration",
      "code": "for decl in node.declarations:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 164,
      "issue": "Manual node iteration",
      "code": "for param in node.parameters:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 175,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 182,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 197,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 201,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 205,
      "issue": "Manual node iteration",
      "code": "for stmt in node.then_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 208,
      "issue": "Manual node iteration",
      "code": "for stmt in node.else_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 224,
      "issue": "Manual node iteration",
      "code": "for arg in node.arguments:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 235,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 240,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 461,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 477,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 513,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 561,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 650,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 156,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'declarations'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 223,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'arguments'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 243,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'message'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 276,
      "issue": "hasattr checking",
      "code": "if hasattr(node, '__dict__'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 267,
      "issue": "Dynamic attribute access",
      "code": "getattr(node, attr_name"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 294,
      "issue": "Dynamic attribute access",
      "code": "getattr(node, attr_name"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 259,
      "issue": "Type name comparison",
      "code": "type(node).__name__ =="
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 35,
      "issue": "isinstance check",
      "code": "isinstance(decl, Pool)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 250,
      "issue": "isinstance check",
      "code": "isinstance(node, list)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 295,
      "issue": "isinstance check",
      "code": "isinstance(attr, list)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 859,
      "issue": "isinstance check",
      "code": "isinstance(size_node, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 213,
      "issue": "Node type field check",
      "code": "if node.function == 'DebugPerf_Start':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 228,
      "issue": "Node type field check",
      "code": "if node.pool_type == 'DynamicPool':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 454,
      "issue": "Node type field check",
      "code": "if node.pool_type == 'DynamicPool':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 49,
      "issue": "compile_X pattern",
      "code": "def compile_program(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 305,
      "issue": "compile_X pattern",
      "code": "def compile_assignment(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 452,
      "issue": "compile_X pattern",
      "code": "def compile_pool(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 502,
      "issue": "compile_X pattern",
      "code": "def compile_dynamic_pool(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 643,
      "issue": "compile_X pattern",
      "code": "def compile_pool_allocation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 662,
      "issue": "compile_X pattern",
      "code": "def compile_acronym_definitions(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 719,
      "issue": "compile_X pattern",
      "code": "def compile_pool_resize(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 759,
      "issue": "compile_X pattern",
      "code": "def compile_pool_move(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 820,
      "issue": "compile_X pattern",
      "code": "def compile_pool_compact(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 853,
      "issue": "compile_X pattern",
      "code": "def compile_pool_allocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 918,
      "issue": "compile_X pattern",
      "code": "def compile_pool_free(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 934,
      "issue": "compile_X pattern",
      "code": "def compile_pool_get_size(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 949,
      "issue": "compile_X pattern",
      "code": "def compile_array_create(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 986,
      "issue": "compile_X pattern",
      "code": "def compile_array_set(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 1018,
      "issue": "compile_X pattern",
      "code": "def compile_array_get(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 1044,
      "issue": "compile_X pattern",
      "code": "def compile_array_length(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 1059,
      "issue": "compile_X pattern",
      "code": "def compile_array_destroy(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 17,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 116,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 133,
      "issue": "isinstance check",
      "code": "isinstance(node, SendMessage)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 135,
      "issue": "isinstance check",
      "code": "isinstance(node, ReceiveMessage)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 22,
      "issue": "compile_X pattern",
      "code": "def compile_sendmessage(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 72,
      "issue": "compile_X pattern",
      "code": "def compile_receivemessage(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 131,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 22,
      "issue": "isinstance check",
      "code": "isinstance(node, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 19,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 55,
      "issue": "compile_X pattern",
      "code": "def compile_socket_create(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 70,
      "issue": "compile_X pattern",
      "code": "def compile_socket_bind(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 131,
      "issue": "compile_X pattern",
      "code": "def compile_socket_connect(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 185,
      "issue": "compile_X pattern",
      "code": "def compile_socket_listen(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 212,
      "issue": "compile_X pattern",
      "code": "def compile_socket_accept(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 235,
      "issue": "compile_X pattern",
      "code": "def compile_socket_read(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 264,
      "issue": "compile_X pattern",
      "code": "def compile_socket_write(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 293,
      "issue": "compile_X pattern",
      "code": "def compile_socket_close(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 313,
      "issue": "compile_X pattern",
      "code": "def compile_socket_set_option(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 358,
      "issue": "compile_X pattern",
      "code": "def compile_get_process_id(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 173,
      "issue": "isinstance check",
      "code": "isinstance(size_node, Number)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 35,
      "issue": "compile_X pattern",
      "code": "def compile_pool_resize(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 74,
      "issue": "compile_X pattern",
      "code": "def compile_pool_move(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 136,
      "issue": "compile_X pattern",
      "code": "def compile_pool_compact(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 167,
      "issue": "compile_X pattern",
      "code": "def compile_pool_allocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 233,
      "issue": "compile_X pattern",
      "code": "def compile_pool_free(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 249,
      "issue": "compile_X pattern",
      "code": "def compile_pool_get_size(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 58,
      "issue": "Manual node iteration",
      "code": "for decl in node.declarations:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 120,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 59,
      "issue": "isinstance check",
      "code": "isinstance(decl, LoopActor)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 64,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 94,
      "issue": "compile_X pattern",
      "code": "def compile_loop_actor(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 140,
      "issue": "compile_X pattern",
      "code": "def compile_loop_spawn(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 161,
      "issue": "compile_X pattern",
      "code": "def compile_loop_yield(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 193,
      "issue": "compile_X pattern",
      "code": "def compile_get_acb(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 204,
      "issue": "compile_X pattern",
      "code": "def compile_get_current_actor(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 215,
      "issue": "compile_X pattern",
      "code": "def compile_set_current_actor(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 230,
      "issue": "compile_X pattern",
      "code": "def compile_set_acb(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 245,
      "issue": "compile_X pattern",
      "code": "def compile_loop_join(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 282,
      "issue": "compile_X pattern",
      "code": "def compile_loop_get_state(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 295,
      "issue": "compile_X pattern",
      "code": "def compile_loop_set_priority(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 313,
      "issue": "compile_X pattern",
      "code": "def compile_loop_get_current(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 323,
      "issue": "compile_X pattern",
      "code": "def compile_loop_suspend(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 336,
      "issue": "compile_X pattern",
      "code": "def compile_loop_resume(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 454,
      "issue": "compile_X pattern",
      "code": "def compile_loop_send(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 44,
      "issue": "Manual node iteration",
      "code": "for param in node.parameters:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 54,
      "issue": "Manual node iteration",
      "code": "for param in node.parameters:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 59,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 71,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 117,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 127,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 43,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'parameters'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 53,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'parameters'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 58,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'body'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 70,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'body'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/semantic_analyzer.py",
      "line": 109,
      "issue": "Node type field check",
      "code": "if node.pool_type == 'DynamicPool':"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 255,
      "issue": "isinstance check",
      "code": "isinstance(node, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 18,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 57,
      "issue": "compile_X pattern",
      "code": "def compile_read_input(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 126,
      "issue": "compile_X pattern",
      "code": "def compile_string_to_number(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 201,
      "issue": "compile_X pattern",
      "code": "def compile_print_message(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 252,
      "issue": "compile_X pattern",
      "code": "def compile_print_number(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 276,
      "issue": "compile_X pattern",
      "code": "def compile_print_string(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 329,
      "issue": "compile_X pattern",
      "code": "def compile_print_string(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 454,
      "issue": "compile_X pattern",
      "code": "def compile_number_to_string(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 553,
      "issue": "compile_X pattern",
      "code": "def compile_string_concat(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 701,
      "issue": "compile_X pattern",
      "code": "def compile_string_compare(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 755,
      "issue": "compile_X pattern",
      "code": "def compile_string_length(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 784,
      "issue": "compile_X pattern",
      "code": "def compile_string_copy(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 822,
      "issue": "compile_X pattern",
      "code": "def compile_string_equals(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 888,
      "issue": "compile_X pattern",
      "code": "def compile_read_input(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 964,
      "issue": "compile_X pattern",
      "code": "def compile_string_pool_init(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1033,
      "issue": "compile_X pattern",
      "code": "def compile_string_pool_concat(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1133,
      "issue": "compile_X pattern",
      "code": "def compile_string_concat_pooled(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1299,
      "issue": "compile_X pattern",
      "code": "def compile_char_to_string(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1336,
      "issue": "compile_X pattern",
      "code": "def compile_string_to_upper(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1429,
      "issue": "compile_X pattern",
      "code": "def compile_string_to_lower(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1521,
      "issue": "compile_X pattern",
      "code": "def compile_string_contains(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1644,
      "issue": "compile_X pattern",
      "code": "def compile_string_substring(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1776,
      "issue": "compile_X pattern",
      "code": "def compile_string_char_at(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1823,
      "issue": "compile_X pattern",
      "code": "def compile_string_extract_until(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1900,
      "issue": "compile_X pattern",
      "code": "def compile_string_index_of(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1979,
      "issue": "compile_X pattern",
      "code": "def compile_string_trim(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2086,
      "issue": "compile_X pattern",
      "code": "def compile_string_replace(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2288,
      "issue": "compile_X pattern",
      "code": "def compile_string_split(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 62,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 109,
      "issue": "Manual node iteration",
      "code": "for stmt in node.finally_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 187,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 193,
      "issue": "Manual node iteration",
      "code": "for stmt in node.finally_body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 28,
      "issue": "compile_X pattern",
      "code": "def compile_try(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 177,
      "issue": "compile_X pattern",
      "code": "def compile_try(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 31,
      "issue": "isinstance check",
      "code": "isinstance(node, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 28,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 53,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 76,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_create_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 104,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_map_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 136,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_switch_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 165,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_unmap_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 186,
      "issue": "compile_X pattern",
      "code": "def compile_virtual_memory_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 207,
      "issue": "compile_X pattern",
      "code": "def compile_vm_allocate_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 236,
      "issue": "compile_X pattern",
      "code": "def compile_vm_free_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 256,
      "issue": "compile_X pattern",
      "code": "def compile_vm_protect_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 278,
      "issue": "compile_X pattern",
      "code": "def compile_cache_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 299,
      "issue": "compile_X pattern",
      "code": "def compile_cache_flush_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 329,
      "issue": "compile_X pattern",
      "code": "def compile_cache_invalidate_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 345,
      "issue": "compile_X pattern",
      "code": "def compile_cache_prefetch_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 367,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 388,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_flush_all_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 404,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_flush_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 429,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_invalidate_safe(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 450,
      "issue": "compile_X pattern",
      "code": "def compile_memory_barrier_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 180,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 332,
      "issue": "Manual node iteration",
      "code": "for stmt in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 360,
      "issue": "Manual node iteration",
      "code": "for item in node.body:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 364,
      "issue": "Manual node iteration",
      "code": "for decl in node.declarations:"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 179,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'body'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 331,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'body'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 358,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'body'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 363,
      "issue": "hasattr checking",
      "code": "if hasattr(node, 'declarations'):"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 336,
      "issue": "isinstance check",
      "code": "isinstance(stmt, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 354,
      "issue": "isinstance check",
      "code": "isinstance(node, Function)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 62,
      "issue": "compile_X pattern",
      "code": "def compile_function_definition(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 219,
      "issue": "compile_X pattern",
      "code": "def compile_function_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 28,
      "issue": "isinstance check",
      "code": "isinstance(node, FunctionCall)"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 25,
      "issue": "compile_X pattern",
      "code": "def compile_operation(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 50,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 73,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_create(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 103,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_map(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 138,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_switch(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 169,
      "issue": "compile_X pattern",
      "code": "def compile_page_table_unmap(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 190,
      "issue": "compile_X pattern",
      "code": "def compile_virtual_memory_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 211,
      "issue": "compile_X pattern",
      "code": "def compile_vm_allocate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 240,
      "issue": "compile_X pattern",
      "code": "def compile_vm_free(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 260,
      "issue": "compile_X pattern",
      "code": "def compile_vm_protect(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 282,
      "issue": "compile_X pattern",
      "code": "def compile_cache_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 303,
      "issue": "compile_X pattern",
      "code": "def compile_cache_flush(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 335,
      "issue": "compile_X pattern",
      "code": "def compile_cache_invalidate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 351,
      "issue": "compile_X pattern",
      "code": "def compile_cache_prefetch(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 372,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 393,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_flush_all(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 412,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_flush(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 437,
      "issue": "compile_X pattern",
      "code": "def compile_tlb_invalidate(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 456,
      "issue": "compile_X pattern",
      "code": "def compile_memory_barrier_call(self, node"
    },
    {
      "category": "TRAVERSAL_MESS",
      "file": "ailang_compiler/assembler/modules/base.py",
      "line": 42,
      "issue": "isinstance check",
      "code": "isinstance(b, int)"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 524,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 530,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 525,
      "issue": "Array allocation",
      "code": "ArrayCreate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 533,
      "issue": "Array allocation",
      "code": "ArrayCreate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 524,
      "issue": "Allocation without free",
      "code": "Allocate', 'PoolFree', 'PoolGetSize',\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 165,
      "issue": "Direct Allocate call",
      "code": "Allocate("
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 165,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 168,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 165,
      "issue": "Allocation without free",
      "code": "Allocate(pool_name, size)\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/pool_manager.py",
      "line": 168,
      "issue": "Allocation without free",
      "code": "Allocate.\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 22,
      "issue": "Array allocation",
      "code": "ArrayCreate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 41,
      "issue": "Allocation without free",
      "code": "Allocate from heap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 20,
      "issue": "Allocation without free",
      "code": "Allocate the global pool table for FixedPool variables\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 24,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/debug_concurrency.py",
      "line": 68,
      "issue": "Allocation without free",
      "code": "Allocate visited array\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 561,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 572,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 612,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 620,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 651,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 715,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 718,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 101,
      "issue": "Allocation without free",
      "code": "Allocate memory\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/hash_ops.py",
      "line": 102,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/heap_allocator.py",
      "line": 41,
      "issue": "Allocation without free",
      "code": "Allocate 32MB heap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/heap_allocator.py",
      "line": 56,
      "issue": "Allocation without free",
      "code": "Allocate from heap\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/heap_manager.py",
      "line": 41,
      "issue": "Allocation without free",
      "code": "Allocate 32MB heap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/heap_manager.py",
      "line": 58,
      "issue": "Allocation without free",
      "code": "Allocate from heap\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 203,
      "issue": "Allocation without free",
      "code": "Allocate dynamic array structure\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 325,
      "issue": "Allocation without free",
      "code": "Allocate\":\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 326,
      "issue": "Allocation without free",
      "code": "Allocate memory block\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 331,
      "issue": "Allocation without free",
      "code": "Allocate requires size\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 333,
      "issue": "Allocation without free",
      "code": "Allocate primitive\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 334,
      "issue": "Allocation without free",
      "code": "Allocate', [size])\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/library_inliner.py",
      "line": 212,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 47,
      "issue": "Allocation without free",
      "code": "Allocate':\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 280,
      "issue": "Allocation without free",
      "code": "Allocate operation (heap-based)\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 283,
      "issue": "Allocation without free",
      "code": "Allocate requires 1 argument (size)\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 334,
      "issue": "Allocation without free",
      "code": "Allocate compilation failed: {str(e)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 274,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 299,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 300,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 302,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 285,
      "issue": "Direct Allocate call",
      "code": "Allocate("
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 854,
      "issue": "Direct Allocate call",
      "code": "Allocate("
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 537,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 867,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 969,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 854,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 856,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 912,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 915,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 951,
      "issue": "Array allocation",
      "code": "ArrayCreate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 63,
      "issue": "Allocation without free",
      "code": "Allocated system_acb_table at stack offset {offset}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 69,
      "issue": "Allocation without free",
      "code": "Allocated system_current_actor at stack offset {offset}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 78,
      "issue": "Allocation without free",
      "code": "Allocate space needed: {allocate_space}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 115,
      "issue": "Allocation without free",
      "code": "Allocate pool table BEFORE compiling any pools!\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 116,
      "issue": "Allocation without free",
      "code": "Allocate the global pool table BEFORE any declarations are compiled.\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 171,
      "issue": "Allocation without free",
      "code": "Allocated parameter {param_name} at stack offset {self.compiler.stack_size}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 191,
      "issue": "Allocation without free",
      "code": "Allocated {node.target} at stack offset {self.compiler.stack_size}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 233,
      "issue": "Allocation without free",
      "code": "Allocated stack pointer for DynamicPool '{pool_var_name}' at offset {self.compil"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 273,
      "issue": "Allocation without free",
      "code": "Allocate calls and sum their sizes\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 277,
      "issue": "Allocation without free",
      "code": "Allocate call\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 278,
      "issue": "Allocation without free",
      "code": "Allocate':\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 285,
      "issue": "Allocation without free",
      "code": "Allocate({size}) at depth {depth}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 289,
      "issue": "Allocation without free",
      "code": "Allocate, reserving 1024\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 390,
      "issue": "Allocation without free",
      "code": "Allocated {resolved_name} at stack offset {offset}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 424,
      "issue": "Allocation without free",
      "code": "Allocated pool variable {var_name} at stack offset {self.compiler.stack_size}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 590,
      "issue": "Allocation without free",
      "code": "Allocate memory for the pool table at program start\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 592,
      "issue": "Allocation without free",
      "code": "Allocate space for pool variables (e.g., 4KB = 512 variables)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 854,
      "issue": "Allocation without free",
      "code": "Allocate(pool_name, size)\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 856,
      "issue": "Allocation without free",
      "code": "Allocate\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 888,
      "issue": "Allocation without free",
      "code": "Allocated {resolved_name} at [rbp - {offset}]\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 912,
      "issue": "Allocation without free",
      "code": "Allocate with size header completed\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 915,
      "issue": "Allocation without free",
      "code": "Allocate compilation failed: {str(e)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 966,
      "issue": "Allocation without free",
      "code": "Allocate via mmap - CORRECTED\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 535,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 537,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 538,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 540,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 595,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 596,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 867,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 881,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 896,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 898,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 909,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 966,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 967,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 969,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 56,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 55,
      "issue": "Allocation without free",
      "code": "Allocate pool via mmap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 115,
      "issue": "Allocation without free",
      "code": "Allocate from a named pool with auto-resize\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 148,
      "issue": "Allocation without free",
      "code": "Allocate from pool\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 55,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 56,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 66,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 38,
      "issue": "Allocation without free",
      "code": "Allocate new variable\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 42,
      "issue": "Allocation without free",
      "code": "Allocated message queue {queue_var} at offset {offset}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 91,
      "issue": "Allocation without free",
      "code": "Allocate new variable\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 95,
      "issue": "Allocation without free",
      "code": "Allocated message queue {queue_var} at offset {offset}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/network_ops.py",
      "line": 87,
      "issue": "Allocation without free",
      "code": "Allocate 16 bytes on stack\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 168,
      "issue": "Direct Allocate call",
      "code": "Allocate("
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 181,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 168,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 170,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 227,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 230,
      "issue": "Pool allocation",
      "code": "PoolAllocate"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 168,
      "issue": "Allocation without free",
      "code": "Allocate(pool_name, size)\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 170,
      "issue": "Allocation without free",
      "code": "Allocate\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 203,
      "issue": "Allocation without free",
      "code": "Allocated {resolved_name} at [rbp - {offset}]\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 227,
      "issue": "Allocation without free",
      "code": "Allocate with size header completed\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 230,
      "issue": "Allocation without free",
      "code": "Allocate compilation failed: {str(e)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 181,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 195,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 211,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 213,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 224,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/relocation_manager.py",
      "line": 29,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 81,
      "issue": "Allocation without free",
      "code": "Allocate space for actor table\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 403,
      "issue": "Allocation without free",
      "code": "Allocate stack space for an actor\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 633,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1311,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1696,
      "issue": "Direct mmap",
      "code": "mmap syscall"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 62,
      "issue": "Allocation without free",
      "code": "Allocate buffer for input (e.g., 1024 bytes)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 65,
      "issue": "Allocation without free",
      "code": "Allocate buffer on heap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 466,
      "issue": "Allocation without free",
      "code": "Allocate buffer (32 bytes)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 631,
      "issue": "Allocation without free",
      "code": "Allocate new buffer using mmap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 895,
      "issue": "Allocation without free",
      "code": "Allocate buffer for input (256 bytes) using mmap\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 968,
      "issue": "Allocation without free",
      "code": "Allocate a large buffer (64KB) once\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1083,
      "issue": "Allocation without free",
      "code": "Allocate from pool\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1310,
      "issue": "Allocation without free",
      "code": "Allocate 2 bytes (char + null terminator)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1373,
      "issue": "Allocation without free",
      "code": "Allocate new string (length + 1 for null terminator)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1465,
      "issue": "Allocation without free",
      "code": "Allocate new string\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1692,
      "issue": "Allocation without free",
      "code": "Allocate buffer (length + 1 for null terminator)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1863,
      "issue": "Allocation without free",
      "code": "Allocate new buffer (length + 1 for null)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2049,
      "issue": "Allocation without free",
      "code": "Allocate new buffer\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2149,
      "issue": "Allocation without free",
      "code": "Allocate new buffer\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2360,
      "issue": "Allocation without free",
      "code": "Allocate buffer\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2409,
      "issue": "Allocation without free",
      "code": "Allocate final buffer\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 67,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 631,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 633,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 895,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 898,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 971,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 972,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1311,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1375,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1467,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 1696,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 2156,
      "issue": "mmap without munmap",
      "code": "mmap"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/try_catch.py",
      "line": 129,
      "issue": "Allocation without free",
      "code": "Allocate space for error flag\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 192,
      "issue": "Allocation without free",
      "code": "Allocate':\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 208,
      "issue": "Allocation without free",
      "code": "Allocate simulation\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/usermode_vm_ops.py",
      "line": 233,
      "issue": "Allocation without free",
      "code": "Allocate failed: {str(e)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 133,
      "issue": "Allocation without free",
      "code": "Allocate space for parameters AND calculated local variables\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 145,
      "issue": "Allocation without free",
      "code": "Allocated {stack_space} bytes for function locals\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 212,
      "issue": "Direct Allocate call",
      "code": "Allocate("
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 85,
      "issue": "Allocation without free",
      "code": "Allocate page table in memory (simplified)\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 193,
      "issue": "Allocation without free",
      "code": "Allocate -> Allocate\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 196,
      "issue": "Allocation without free",
      "code": "Allocate':\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 212,
      "issue": "Allocation without free",
      "code": "Allocate(size-65536, protection-'RW')\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 221,
      "issue": "Allocation without free",
      "code": "Allocate {size} bytes, protection {protection}, alignment {alignment}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 233,
      "issue": "Allocation without free",
      "code": "Allocated {size} bytes at virtual address {hex(virtual_addr)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/modules/virtual_memory.py",
      "line": 237,
      "issue": "Allocation without free",
      "code": "Allocate failed: {str(e)}\")\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/assembler/modules/stack.py",
      "line": 156,
      "issue": "Allocation without free",
      "code": "Allocate stack space\"\"\"\n"
    },
    {
      "category": "MEMORY_PROBLEMS",
      "file": "ailang_compiler/assembler/modules/strings.py",
      "line": 137,
      "issue": "Allocation without free",
      "code": "Allocate buffer on stack\n"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 87,
      "issue": "Forward reference comment",
      "code": "# forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 401,
      "issue": "Forward reference comment",
      "code": "# This handles forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 627,
      "issue": "Forward reference comment",
      "code": "# Forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 817,
      "issue": "Forward reference comment",
      "code": "# Fix user function forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 898,
      "issue": "Forward reference comment",
      "code": "# Fix forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/scope_manager.py",
      "line": 39,
      "issue": "Forward reference comment",
      "code": "# This is a robust way to handle forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/debug_ops.py",
      "line": 474,
      "issue": "Forward reference comment",
      "code": "# Forward ref"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 103,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_mov_rax_imm64(0)\n            offset = self.compiler.variables["
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 338,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_push_rax()\n                        pool_stack_offset = self.compil"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 351,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_push_rax()\n                        pool_stack_offset = self.compil"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 379,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_push_rax()\n                            pool_stack_offset = self.co"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 438,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_mov_rax_imm64(value)\n                    offset = self.compiler.va"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 149,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x8B, 0xBD)  # MOV RDI, [RBP + base_offset]\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 170,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x8B, 0xBD)  # MOV RDI, [RBP + base_offset]\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 184,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x89, 0x85)  # MOV [RBP + base_offset], RAX\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 195,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x8B, 0xBD)  # MOV RDI, [RBP + base_offset]\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 223,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_mov_rax_imm64(0)\n        offset = self.compiler.variables["
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 264,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x8B, 0xBD)  # MOV RDI, [RBP + base_offset]\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 276,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x89, 0x85)  # MOV [RBP + base_offset], RAX\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/memory_pool.py",
      "line": 279,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_bytes(0x48, 0x89, 0x85)  # MOV [RBP + size_offset], RAX\n        se"
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 120,
      "issue": "Code emission during discovery",
      "code": "self.asm.emit_mov_rax_imm64(0)\n        offset = self.compiler.variables["
    },
    {
      "category": "PHASE_VIOLATIONS",
      "file": "ailang_compiler/modules/user_functions.py",
      "line": 270,
      "issue": "Forward reference comment",
      "code": "# Forward ref"
    },
    {
      "category": "HIGH_COUPLING",
      "file": "ailang_compiler/modules/array_ops.py",
      "line": 0,
      "issue": "High coupling - 20 cross-module refs",
      "code": "References: asm, heap..."
    },
    {
      "category": "HIGH_COUPLING",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 0,
      "issue": "High coupling - 112 cross-module refs",
      "code": "References: memory, asm..."
    },
    {
      "category": "HIGH_COUPLING",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 0,
      "issue": "High coupling - 27 cross-module refs",
      "code": "References: scheduler, asm, codegen, variables..."
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 87,
      "issue": "Fixup list",
      "code": "self.task_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 625,
      "issue": "Fixup list",
      "code": "self.task_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 630,
      "issue": "Fixup list",
      "code": "self.task_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 779,
      "issue": "Fixup list",
      "code": "self.task_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 786,
      "issue": "Fixup list",
      "code": "self.task_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 819,
      "issue": "Fixup list",
      "code": "self.user_function_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 820,
      "issue": "Fixup list",
      "code": "self.user_function_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 627,
      "issue": "Resolve later comment",
      "code": "# Forward reference - will be resolved later"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/jump_manager.py",
      "line": 34,
      "issue": "Fixup list",
      "code": "self.lea_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/jump_manager.py",
      "line": 112,
      "issue": "Fixup list",
      "code": "self.lea_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/jump_manager.py",
      "line": 185,
      "issue": "Fixup list",
      "code": "self.lea_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/jump_manager.py",
      "line": 200,
      "issue": "Fixup list",
      "code": "self.lea_fixups"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/jump_manager.py",
      "line": 56,
      "issue": "Resolve later comment",
      "code": "# Resolve all local jumps NOW, not later"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/base.py",
      "line": 28,
      "issue": "Pending operation",
      "code": "pending_jumps"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/base.py",
      "line": 29,
      "issue": "Pending operation",
      "code": "pending_calls"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/control_flow.py",
      "line": 24,
      "issue": "Pending operation",
      "code": "pending_jumps"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/control_flow.py",
      "line": 25,
      "issue": "Pending operation",
      "code": "pending_jumps"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/control_flow.py",
      "line": 82,
      "issue": "Pending operation",
      "code": "pending_calls"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/control_flow.py",
      "line": 83,
      "issue": "Pending operation",
      "code": "pending_calls"
    },
    {
      "category": "FORWARD_REFS",
      "file": "ailang_compiler/assembler/modules/control_flow.py",
      "line": 84,
      "issue": "Pending operation",
      "code": "pending_calls"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 726,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 745,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 754,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -acb_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/ailang_compiler.py",
      "line": 809,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', offset)  # Little-endian 32-bit"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/pool_manager.py",
      "line": 25,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/assignment_handler.py",
      "line": 80,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 122,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -symbol"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 153,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -symbol"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 176,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/code_generator2.py",
      "line": 186,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 41,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 60,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset))  # MOV RAX, [RBP-offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/expression_compiler.py",
      "line": 101,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/fileio_ops.py",
      "line": 411,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/lowlevel_ops.py",
      "line": 883,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 89,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 95,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -acb_table_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 99,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 106,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 404,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 444,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 549,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 569,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -stack_offset))  # MOV RAX, [RBP-offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 613,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/memory_manager.py",
      "line": 894,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 47,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 67,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 100,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 105,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/message_passing.py",
      "line": 123,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 28,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -pool_stack_offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/pool_manager.py",
      "line": 209,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 199,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 210,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 226,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/scheduling_primitives.py",
      "line": 241,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    },
    {
      "category": "STACK_RISK",
      "file": "ailang_compiler/modules/string_ops.py",
      "line": 225,
      "issue": "Negative offset packing",
      "code": "struct.pack('<i', -offset"
    }
  ]
}