// test_fileio_minimal.ailang
// Minimal test to isolate segfault

PrintMessage("Minimal File I/O Test")

// Test 1: Simple literal write
PrintMessage("Test 1: Write literal")
WriteTextFile("test_simple.txt", "Hello")
PrintMessage("  Written")

// Test 2: Check exists
PrintMessage("Test 2: Check exists")
exists = FileExists("test_simple.txt")
PrintMessage("  Exists:")
PrintNumber(exists)

// Test 3: Write with variable filename
PrintMessage("Test 3: Variable filename")
filename = StringConcat("test_", "var.txt")
WriteTextFile(filename, "Variable filename test")
PrintMessage("  Written with variable name")

// Test 4: Write with variable content
PrintMessage("Test 4: Variable content")
content = StringConcat("Dynamic ", "content")
WriteTextFile("test_content.txt", content)
PrintMessage("  Written with variable content")

// Test 5: Both variables
PrintMessage("Test 5: Both variables")
fname2 = StringConcat("both_", "vars.txt")
content2 = StringConcat("Both ", "variable")
WriteTextFile(fname2, content2)
PrintMessage("  Written with both variables")

PrintMessage("Test complete!")

// test_fileio_section3.ailang
// Isolate section 3 to find the crash

PrintMessage("File I/O Section 3 Debug")
PrintMessage("========================")

// Test dynamic filename generation
PrintMessage("Test 1: Simple loop write")
i = 0
WhileLoop LessThan(i, 3) {
    
        PrintMessage("  Loop iteration:")
        PrintNumber(i)
    
        // Build filename: file_0.txt, file_1.txt, file_2.txt
        num_str = NumberToString(i)
        PrintMessage("  Number string:")
        PrintMessage(num_str)
    
        filename = StringConcat("file_", num_str)
        PrintMessage("  Filename part 1:")
        PrintMessage(filename)
    
        filename_full = StringConcat(filename, ".txt")
        PrintMessage("  Full filename:")
        PrintMessage(filename_full)
    
        // Build content
        content = StringConcat("Content for file ", num_str)
        PrintMessage("  Content:")
        PrintMessage(content)
    
        // Try to write
        PrintMessage("  About to write...")
        WriteTextFile(filename_full, content)
        PrintMessage("  Written!")
    
        i = Add(i, 1)
    }
    }

PrintMessage("Test complete!")

// Add after existing Test 1 section:

// Test 2: Larger loop (find breaking point)
PrintMessage("Test 2: Larger loop write")
i = 0
WhileLoop LessThan(i, 10) {
    
        num_str = NumberToString(i)
        filename = StringConcat("file_", num_str)
        filename_full = StringConcat(filename, ".txt")
        content = StringConcat("Content for file ", num_str)
    
        WriteTextFile(filename_full, content)
        PrintMessage("  Created:")
        PrintMessage(filename_full)
    
        i = Add(i, 1)
    }
    }

// Test 3: Check files exist
PrintMessage("Test 3: Verify files exist")
j = 0
WhileLoop LessThan(j, 10) {
    
        num_str = NumberToString(j)
        filename = StringConcat("file_", num_str)
        filename_full = StringConcat(filename, ".txt")
    
        exists = FileExists(filename_full)
        PrintMessage("  File exists:")
        PrintNumber(exists)
    
        j = Add(j, 1)
    }
    }

// Test 4: Edge case - empty file
PrintMessage("Test 4: Empty file")
WriteTextFile("empty.txt", "")
empty_exists = FileExists("empty.txt")
PrintMessage("  Empty file exists:")
PrintNumber(empty_exists)

// Test 5: Overwrite test
PrintMessage("Test 5: Overwrite")
WriteTextFile("overwrite.txt", "Initial")
WriteTextFile("overwrite.txt", "Updated content that is much longer")
ow_exists = FileExists("overwrite.txt")
PrintMessage("  Overwrite exists:")
PrintNumber(ow_exists)

PrintMessage("Extended test complete!")