// test_print_corruption.ailang
// Test if complex print statements cause issues

PrintMessage("=== PRINT CORRUPTION TEST ===")

// Create and setup buffer
buffer = Allocate(32)
StoreValue(buffer, 42)
StoreValue(Add(buffer, 1), 49)
StoreValue(Add(buffer, 2), 13)
StoreValue(Add(buffer, 3), 10)

PrintMessage("\n[1] Simple read - no complex print")
val = Dereference(buffer)
PrintNumber(val)
PrintMessage(" <- Should be 42")

PrintMessage("\n[2] Read with simple print")
val2 = Dereference(buffer)
PrintMessage("Value: ")
PrintNumber(val2)

PrintMessage("\n[3] Read with brackets like Redis test")
val3 = Dereference(buffer)
PrintMessage("    [")
PrintNumber(0)
PrintMessage("] = ")
PrintNumber(val3)

PrintMessage("\n[4] The exact Redis buffer loop")
j = 0
WhileLoop LessThan(j, 4) {
    
        // This matches the Redis buffer test format
        byte = Dereference(Add(buffer, j))
        PrintMessage("    [")
        PrintNumber(j)
        PrintMessage("] = ")
        PrintNumber(byte)
    
        // Check for specific values
        IfCondition EqualTo(byte, 42) ThenBlock: {
            PrintMessage(" ('*')")
        }
        IfCondition EqualTo(byte, 49) ThenBlock: {
            PrintMessage(" ('1')")
        }
        IfCondition EqualTo(byte, 13) ThenBlock: {
            PrintMessage(" ('\\r')")
        }
        IfCondition EqualTo(byte, 10) ThenBlock: {
            PrintMessage(" ('\\n')")
        }
    
        j = Add(j, 1)
    }
    }

PrintMessage("\n[5] Alternative: Store values, then print")
// Read all values first
v0 = Dereference(buffer)
v1 = Dereference(Add(buffer, 1))
v2 = Dereference(Add(buffer, 2))
v3 = Dereference(Add(buffer, 3))

// Then print them
PrintMessage("Stored values:")
PrintMessage("  v0 = ")
PrintNumber(v0)
PrintMessage("  v1 = ")
PrintNumber(v1)
PrintMessage("  v2 = ")
PrintNumber(v2)
PrintMessage("  v3 = ")
PrintNumber(v3)

Deallocate(buffer, 32)

PrintMessage("\n=== END TEST ===")
PrintMessage("\nIf values are correct, the issue is elsewhere.")
PrintMessage("If values are wrong in loop, it's a loop/print interaction bug.")