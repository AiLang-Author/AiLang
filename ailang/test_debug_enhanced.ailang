// test_debug_comprehensive.ailang
// Debug feature test suite using existing syntax

PrintMessage("Debug Test Suite Starting")
PrintMessage("=========================")

// Initialize test data
x = 10
counter = 0
result = 0
watchpoint = 0

// Test Level 1: Assertions
SubRoutine.TestAssertions {
    PrintMessage("Testing Assertions (Level 1)")
    
    DebugAssert(GreaterThan(x, 0), "x must be positive")
    
    computed = Multiply(x, 2)
    DebugAssert(LessThan(computed, 100), "Computed value too large")
    
    PrintMessage("  Assertions passed")
}

// Test Level 2: Debug Blocks
SubRoutine.TestDebugLevel2 {
    PrintMessage("Testing Debug Level 2")
    
    Debug("stacktrace", level=2) {
        PrintMessage("  Inside level 2 debug block")
        local_var = 42
    }
}

// Test Level 3: Advanced Debug
SubRoutine.TestDebugLevel3 {
    PrintMessage("Testing Debug Level 3")
    
    Debug("memory", level=3) {
        PrintMessage("  Memory inspection point")
    }
    
    Debug("watchpoint", level=3) {
        old_value = watchpoint
        watchpoint = 42
        PrintMessage("  Variable modified")
    }
}

// Test Level 4: Interactive
SubRoutine.TestDebugLevel4 {
    PrintMessage("Testing Debug Level 4")
    
    Debug("breakpoint", level=4) {
        i = 0
        WhileLoop LessThan(i, 5) {
            
                counter = Add(counter, 1)
                i = Add(i, 1)
    }
}

// Test Performance
SubRoutine.TestPerformance {
    PrintMessage("Testing Performance")
    
    DebugPerf.Start("test")
    
    sum = 0
    i = 0
    WhileLoop LessThan(i, 100) {
        
            sum = Add(sum, i)
            i = Add(i, 1)
        }
    
    DebugPerf.End("test")
}

// Main
RunTask(TestAssertions)
RunTask(TestDebugLevel2)
RunTask(TestDebugLevel3)
RunTask(TestDebugLevel4)
RunTask(TestPerformance)

PrintMessage("Test Complete")
PrintMessage("Final counter:")
PrintNumber(counter)