// String utility functions implemented in pure AILANG
// No compiler changes needed!

Function StringLength(str) {
    len = 0
    ptr = str
    byte = Dereference(ptr)
    
    WhileLoop GreaterThan(byte, 0) {
        len = Add(len, 1)
        ptr = Add(ptr, 1)
        byte = Dereference(ptr)
    }
    
    ReturnValue len
}

Function StringToNumber(str) {
    result = 0
    ptr = str
    byte = Dereference(ptr)
    
    // Process each digit
    WhileLoop GreaterThan(byte, 0) {
        // Check if it's a digit (48='0' to 57='9')
        is_digit = GreaterThan(byte, 47)
        is_digit2 = LessThan(byte, 58)
        
        // Only process if valid digit
        IfCondition EqualTo(is_digit, is_digit2) ThenBlock {
            digit = Subtract(byte, 48)  // Convert ASCII to digit
            result = Multiply(result, 10)
            result = Add(result, digit)
        }
        
        ptr = Add(ptr, 1)
        byte = Dereference(ptr)
    }
    
    ReturnValue result
}

// Helper: Find character in string
Function StringFindChar(str, target_char) {
    position = 0
    ptr = str
    byte = Dereference(ptr)
    
    WhileLoop GreaterThan(byte, 0) {
        IfCondition EqualTo(byte, target_char) ThenBlock {
            ReturnValue position
        }
        position = Add(position, 1)
        ptr = Add(ptr, 1)
        byte = Dereference(ptr)
    }
    
    ReturnValue -1  // Not found
}