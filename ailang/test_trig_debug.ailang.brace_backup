// test_trig_debug.ailang
// Debug test for trig library

// Import the library
LibraryImport.FixedPointTrig {
    // Library will be loaded
}

PrintMessage("=== TRIG DEBUG TEST ===")
PrintMessage("")

// Test 1: Check if pool values loaded correctly
PrintMessage("Testing pool values:")
scale = FixedPointTrig.scale
PrintMessage("  Scale value: ")
PrintNumber(scale)
PrintMessage("  Expected: 10000")

pi_val = FixedPointTrig.pi
PrintMessage("  Pi value: ")
PrintNumber(pi_val)
PrintMessage("  Expected: 31416")

// Test 2: Direct lookup table access
PrintMessage("")
PrintMessage("Testing sin table:")
sin30_val = SinTable.sin_30
PrintMessage("  sin_30 from table: ")
PrintNumber(sin30_val)
PrintMessage("  Expected: 5000")

sin45_val = SinTable.sin_45
PrintMessage("  sin_45 from table: ")
PrintNumber(sin45_val)
PrintMessage("  Expected: 7071")

// Test 3: Simple function call
PrintMessage("")
PrintMessage("Testing simple conversion:")
three = FixedPoint.FromInt(3)
PrintMessage("  FromInt(3): ")
PrintNumber(three)
PrintMessage("  Expected: 30000")

// Test 4: Try the Sin function with debug
PrintMessage("")
PrintMessage("Testing Sin function:")
result = Trig.Sin(30)
PrintMessage("  Sin(30): ")
PrintNumber(result)
PrintMessage("  Expected: 5000")

// Test 5: Try a simple known angle
PrintMessage("")
PrintMessage("Testing Sin(0):")
sin0 = Trig.Sin(0)
PrintMessage("  Sin(0): ")
PrintNumber(sin0)
PrintMessage("  Expected: 0")

PrintMessage("")
PrintMessage("=== END DEBUG TEST ===")