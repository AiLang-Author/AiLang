// test_actor_spawn.ailang
// Test various ways to trigger LoopActor execution

PrintMessage("=== Testing Actor Execution Methods ===")
PrintMessage("")

// Global state
actor_ran = 0
spawn_result = 0

// Define a simple actor
LoopActor.TestActor {
    PrintMessage("*** TestActor is running! ***")
    actor_ran = 1
}

PrintMessage("After LoopActor definition, actor_ran =")
PrintNumber(actor_ran)
PrintMessage("")

// Method 1: Try LoopSpawn (if it exists)
PrintMessage("Method 1: Testing LoopSpawn...")
// Uncomment if LoopSpawn is a valid function:
// spawn_result = LoopSpawn("TestActor")
// PrintMessage("LoopSpawn result:")
// PrintNumber(spawn_result)
// PrintMessage("actor_ran after LoopSpawn:")
// PrintNumber(actor_ran)
PrintMessage("(LoopSpawn not tested - may not be implemented)")
PrintMessage("")

// Method 2: Try LoopStart 
PrintMessage("Method 2: Testing LoopStart...")
start_ran = 0
LoopStart.InitCode {
    PrintMessage("*** LoopStart is running! ***")
    start_ran = 1
}
PrintMessage("start_ran after LoopStart definition:")
PrintNumber(start_ran)
PrintMessage("")

// Method 3: Try LoopMain
PrintMessage("Method 3: Testing LoopMain...")
main_ran = 0
LoopMain.MainCode {
    PrintMessage("*** LoopMain is running! ***")
    main_ran = 1
}
PrintMessage("main_ran after LoopMain definition:")
PrintNumber(main_ran)
PrintMessage("")

// Method 4: Try LoopShadow
PrintMessage("Method 4: Testing LoopShadow...")
shadow_ran = 0
LoopShadow.BackgroundCode {
    PrintMessage("*** LoopShadow is running! ***")
    shadow_ran = 1
}
PrintMessage("shadow_ran after LoopShadow definition:")
PrintNumber(shadow_ran)
PrintMessage("")

// Method 5: Try RunTask with actor name (probably won't work but worth trying)
PrintMessage("Method 5: Testing RunTask with actor name...")
// This likely won't work since RunTask is for SubRoutines
// RunTask(TestActor)
PrintMessage("(Not tested - RunTask is for SubRoutines)")
PrintMessage("")

// Method 6: Check if there's an implicit main actor
PrintMessage("Method 6: Checking for implicit execution...")
LoopActor.Main {
    PrintMessage("*** Main actor is running! ***")
    actor_ran = 2
}
PrintMessage("actor_ran after Main actor:")
PrintNumber(actor_ran)
PrintMessage("")

// Final check - maybe actors run at program end?
PrintMessage("=== Final State ===")
PrintMessage("actor_ran:")
PrintNumber(actor_ran)
PrintMessage("start_ran:")
PrintNumber(start_ran)
PrintMessage("main_ran:")
PrintNumber(main_ran)
PrintMessage("shadow_ran:")
PrintNumber(shadow_ran)

PrintMessage("")
PrintMessage("If all values are 0, Loop* blocks are not executing")