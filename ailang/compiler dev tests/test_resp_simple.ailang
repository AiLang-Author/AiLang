// test_resp_simple.ailang
// Test RESP-like functions with user-defined functions

PrintMessage("RESP Function Test")
PrintMessage("==================")

// Simple RESP response builder function
Function.RESP.SimpleString {
    Input: msg_ptr: Integer
    Output: Address
    Body: {
        // Build a simple "+OK\r\n" response
        resp = ArrayCreate(5)
        ArraySet(resp, 0, 43)   // '+' = 43
        ArraySet(resp, 1, 79)   // 'O' = 79
        ArraySet(resp, 2, 75)   // 'K' = 75
        ArraySet(resp, 3, 13)   // '\r' = 13
        ArraySet(resp, 4, 10)   // '\n' = 10
        ReturnValue(resp)
    }
}

// Call the function
response = RESP.SimpleString(0)
PrintMessage("Built RESP response")

// Verify the response
first_byte = ArrayGet(response, 0)
PrintMessage("First byte (should be 43 for '+'):")
PrintNumber(first_byte)

second_byte = ArrayGet(response, 1)
PrintMessage("Second byte (should be 79 for 'O'):")
PrintNumber(second_byte)

// Function to check if it's a simple string
Function.RESP.IsSimpleString {
    Input: resp_array: Address
    Output: Integer
    Body: {
        first = ArrayGet(resp_array, 0)
        is_plus = EqualTo(first, 43)
        ReturnValue(is_plus)
    }
}

check = RESP.IsSimpleString(response)
PrintMessage("Is simple string (1=yes, 0=no):")
PrintNumber(check)

// Function to get RESP type
Function.RESP.GetType {
    Input: resp_array: Address
    Output: Integer
    Body: {
        first = ArrayGet(resp_array, 0)
        
        // Check for '+' (43)
        is_simple = EqualTo(first, 43)
        IfCondition is_simple ThenBlock: {
            ReturnValue(1)  // Type 1 = Simple String
        }
        
        // Check for '*' (42)
        is_array = EqualTo(first, 42)
        IfCondition is_array ThenBlock: {
            ReturnValue(2)  // Type 2 = Array
        }
        
        // Check for '$' (36)
        is_bulk = EqualTo(first, 36)
        IfCondition is_bulk ThenBlock: {
            ReturnValue(3)  // Type 3 = Bulk String
        }
        
        ReturnValue(0)  // Type 0 = Unknown
    }
}

resp_type = RESP.GetType(response)
PrintMessage("RESP type (1=SimpleString):")
PrintNumber(resp_type)

PrintMessage("RESP test complete!")