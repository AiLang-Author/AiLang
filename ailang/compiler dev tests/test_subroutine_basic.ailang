// test_subroutine_basic.ailang
// Test SubRoutine definitions and calls

PrintMessage("SubRoutine Basic Test")
PrintMessage("=====================")

// Define a simple subroutine
SubRoutine.PrintTwice {
    PrintMessage("First print from subroutine")
    PrintMessage("Second print from subroutine")
}

// Define subroutine with state modification
test_value = 10

SubRoutine.ModifyValue {
    PrintMessage("SubRoutine modifying value...")
    test_value = Add(test_value, 5)
    PrintMessage("Value modified in subroutine")
}

// Test calling subroutines
PrintMessage("Calling PrintTwice:")
RunTask(PrintTwice)

PrintMessage("Value before SubRoutine:")
PrintNumber(test_value)

PrintMessage("Calling ModifyValue:")
RunTask(ModifyValue)

PrintMessage("Value after SubRoutine:")
PrintNumber(test_value)

// Test nested subroutine calls
SubRoutine.Outer {
    PrintMessage("In Outer subroutine")
    RunTask(PrintTwice)
    PrintMessage("Back in Outer")
}

PrintMessage("Calling nested subroutine:")
RunTask(Outer)

// Test subroutine with loop
SubRoutine.LoopRoutine {
    PrintMessage("SubRoutine with loop:")
    counter = 0
    WhileLoop LessThan(counter, 3) {
        
            PrintMessage("  SubRoutine loop:")
            PrintNumber(counter)
            counter = Add(counter, 1)
        }
}

RunTask(LoopRoutine)

PrintMessage("SubRoutine test complete!")