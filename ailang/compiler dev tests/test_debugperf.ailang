// test_debugperf.ailang
// Test DebugPerf.Start and DebugPerf.End syntax

PrintMessage("DebugPerf Timing Test")
PrintMessage("=====================")

// Test 1: Time a simple loop
DebugPerf.Start("simple_loop")

sum = 0
i = 0
WhileLoop LessThan(i, 1000) {
    sum = Add(sum, i)
    i = Add(i, 1)
}

DebugPerf.End("simple_loop")

PrintMessage("Sum of 0 to 999:")
PrintNumber(sum)
PrintMessage("")

// Test 2: Time string operations
DebugPerf.Start("string_ops")

str1 = "Hello"
str2 = "World"
result = StringConcat(str1, " ")
result = StringConcat(result, str2)

DebugPerf.End("string_ops")

PrintMessage("String result:")
PrintMessage(result)
PrintMessage("")

// Test 3: Time function calls
Function.Work.Calculate {
    Body: {
        x = Multiply(100, 2)
        y = Add(x, 50)
        ReturnValue(y)
    }
}

DebugPerf.Start("function_calls")

val1 = Work.Calculate()
val2 = Work.Calculate()
val3 = Work.Calculate()

DebugPerf.End("function_calls")

PrintMessage("Function result:")
PrintNumber(val1)
PrintMessage("")

// Test 4: Nested timing
DebugPerf.Start("outer_timing")

PrintMessage("Doing outer work...")

DebugPerf.Start("inner_timing")
j = 0
WhileLoop LessThan(j, 100) {
    j = Add(j, 1)
}
DebugPerf.End("inner_timing")

k = 0
WhileLoop LessThan(k, 200) {
    k = Add(k, 1)
}

DebugPerf.End("outer_timing")

PrintMessage("")
PrintMessage("Test complete!")